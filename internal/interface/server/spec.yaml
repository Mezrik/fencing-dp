openapi: "3.0.0"
info:
  version: 1.0.0
  title: Fencing API
paths:
  /competitions:
    get:
      tags:
        - Competition
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompetitionResult"
    post:
      tags:
        - Competition
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCompetitionCommand"
      responses:
        '200':
          description: todo

  /competitions/categories:
    get:
      tags:
        - Competition
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompetitionCategoryResult"

  /competitions/weapons:
    get:
      tags:
        - Competition
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/WeaponResult"
  
  /competitions/{competitionId}:
    get:
      tags:
        - Competition
      parameters:
        - in: path
          name: competitionId
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          required: true
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompetitionResult"

  /competitions/{competitionId}/groups:
    get:
      tags:
        - Competition
      parameters:
        - in: path
          name: competitionId
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000 
          required: true
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompetitionGroup"
  
  /competitions/{competitionId}/groups/{groupId}:
    get:
      tags:
        - Competition
      parameters:
        - in: path
          name: competitionId
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          required: true
        - in: path
          name: groupId
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          required: true
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/CompetitionGroup"
                
  /competitors:
    get:
      tags:
        - Competitor
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: "#/components/schemas/CompetitorResult"
    post:
      tags:
        - Competitor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CreateCompetitorCommand"
      responses:
        '200':
          description: todo
  /competitors/all/{competitionId}:
    get:
      tags:
        - Competitor
      parameters:
        - in: path
          name: competitionId
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          required: true
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CompetitionParticipant"

  /competitors/assign-participant:
    post:
      tags:
        - Competitor
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AssignCompetitorRequest"
      responses:
        '200':
          description: todo

  /competitors/import:
    post:
      tags:
        - Competitor
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: The CSV file to upload.
              
      responses:
        '200':
          description: todo
          


  /matches/{matchId}:
    get:
      tags:
        - Match
      parameters:
        - in: path
          name: matchId
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          required: true
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MatchDetail"
  
  /matches/{groupId}/all:
    get:
      tags:
        - Match
      parameters:
        - in: path
          name: groupId
          schema:
            type: string
            format: uuid
            example: 123e4567-e89b-12d3-a456-426614174000
          required: true
      responses:
        '200':
          description: todo
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Match"
      

components:
  schemas:
    # base types
    CompetitionResult:
      type: object
      required:
        - name
        - id
        - date
        - competitionType
        - gender
        - weapon
        - category
        - organizerName
        - federationName

      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          example: "Competition 1"
        organizerName: 
          type: string
          example: "Organizer 1"
        federationName: 
          type: string
          example: "Federation 1"
        date: 
          type: string
          example: "2024-01-01"
        competitionType: 
          $ref: "#/components/schemas/CompetitionTypeEnum"
        gender:
          $ref: "#/components/schemas/GenderEnum"
        weapon:
          $ref: "#/components/schemas/WeaponResult"
        category:
          $ref: "#/components/schemas/CompetitionCategoryResult"

    CreateCompetitionCommand:
      type: object
      required:
        - name
        - organizerName
        - federationName
        - date
        - competitionType
        - gender
        - categoryId
        - weaponId
      properties:
        name:
          type: string
          example: "Test Open 2024"
        organizerName:
          type: string
          example: "SC Praha"
        federationName:
          type: string
          example: "CSS"
        date: 
          type: string
          example: "2024-01-01"
        competitionType: 
          $ref: "#/components/schemas/CompetitionTypeEnum"
        gender:
          $ref: "#/components/schemas/GenderEnum"
        categoryId:
          type: string
          format: uuid
        weaponId:
          type: string
          format: uuid

    CompetitionTypeEnum:
      type: string
      enum: [national, international]
    GenderEnum:
      type: string
      enum: [male, female, mixed]

    CompetitionCategoryResult:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          example: "Category 1"

    WeaponResult:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          example: "Category 1"
    
    CreateCompetitorCommand:
      type: object
      required:
        - surname
        - firstname
        - gender
        - clubId
        - license
        - birthdate
      properties:
        surname:
          type: string
          example: "surname"
        firstname:
          type: string
          example: "firstname"
        gender:
          $ref: "#/components/schemas/GenderEnum"
        clubId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        license:
          type: string
          example: "license"
        licenseFie:
          type: string
          example: "licenseFie"
        birthdate:
          type: string
          example: "2024-01-01"

    CompetitorResult:
      type: object
      required:
        - id
        - surname
        - firstname
        - gender
        - club
        - license
        - birthdate
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        surname:
          type: string
          example: "surname"
        firstname:
          type: string
          example: "firstname"
        gender:
          $ref: "#/components/schemas/GenderEnum"
        club:
          $ref: "#/components/schemas/ClubResult"
        license:
          type: string
          example: "license"
        licenseFie:
          type: string
          example: "licenseFie"
        birthdate:
          type: string
          example: "2024-01-01"

    ClubResult: 
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          example: "club 1"
    
    CompetitionParticipant:
      type: object
      required:
        - id
        - competitionId
        - competitorId
        - competitor
      properties:
        competitor:
          $ref: "#/components/schemas/CompetitorResult"
        competitionId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        deploymentNumber:
          type: integer
          example: 1
        points:
          type: number
          example: 0
        startingPosition:
          type: integer
          example: 1
        groupId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        
    CompetitionGroup: 
      type: object
      required:
        - id
        - name
        - competitionId
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        name:
          type: string
          example: "group 1"  
        competitionId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        pisteNumber:
          type: integer
          example: 1

    Match:
      type: object
      required:
        - id
        - groupId
        - participantOneId
        - participantTwoId
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        groupId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        participantOneId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        participantTwoId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000

    MatchDetail:
      type: object
      required:
        - id
        - groupId
        - participantOneId
        - participantTwoId
        - state
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        groupId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        participantOneId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        participantTwoId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        state:
          type: array
          items:
            $ref: "#/components/schemas/MatchStateItem"

    MatchStateItem:
      type: object
      required:
        - id
        - change
      properties:
        id:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        change:
          $ref: "#/components/schemas/MatchChangeEnum"
        pointTo:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000

    MatchChangeEnum:
      type: string
      enum: [match_start, match_end, fight_start, fight_stop, point_added, point_subtracted]

    AssignCompetitorRequest:
      type: object
      required:
        - competitionId
        - competitorId
      properties:
        competitionId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000
        competitorId:
          type: string
          format: uuid
          example: 123e4567-e89b-12d3-a456-426614174000